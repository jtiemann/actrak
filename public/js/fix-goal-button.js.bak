// Fix for goal button functionality
document.addEventListener('DOMContentLoaded', function() {
  // Make sure GoalsManager is initialized
  if (!window.goalsManager && window.GoalsManager) {
    window.goalsManager = new GoalsManager();
  }
  
  // Function to get the current activity from the page
  function getCurrentActivityFromPage() {
    // Try to get from activity selector if available
    const activitySelector = document.getElementById('activity-type');
    if (activitySelector && activitySelector.value) {
      const activityId = parseInt(activitySelector.value);
      if (activityId) {
        // Get the selected option to get the activity name
        const selectedOption = activitySelector.options[activitySelector.selectedIndex];
        const activityName = selectedOption ? selectedOption.text : '';
        
        // Construct activity object
        return {
          activity_type_id: activityId,
          name: activityName
        };
      }
    }
    
    // Default to first activity if available
    if (window.activity_types  && Array.isArray(window.activity_types ) && window.activity_types .length > 0) {
      return window.activity_types [0];
    }
    
    return null;
  }
  
  // Ensure add goal button is correctly attached
  const addGoalBtn = document.getElementById('add-goal-btn');
  if (addGoalBtn) {
    // Remove old event listeners by cloning and replacing
    const newAddGoalBtn = addGoalBtn.cloneNode(true);
    addGoalBtn.parentNode.replaceChild(newAddGoalBtn, addGoalBtn);
    
    // Add event listener
    newAddGoalBtn.addEventListener('click', function(event) {
      event.preventDefault();
      
      // Get current activity before showing form
      const currentActivity = getCurrentActivityFromPage();
      
      if (window.goalsManager) {
        // Make sure the current activity is set
        if (currentActivity) {
          console.log('Setting current activity for goal form:', currentActivity);
          window.goalsManager.currentActivity = currentActivity;
        }
        
        window.goalsManager.showAddGoalForm();
      } else {
        console.error('Goals manager not available');
      }
    });
  }
  
  // Ensure goal form cancel button works
  const cancelGoalBtn = document.getElementById('cancel-goal-btn');
  if (cancelGoalBtn) {
    // Remove old event listeners by cloning and replacing
    const newCancelGoalBtn = cancelGoalBtn.cloneNode(true);
    cancelGoalBtn.parentNode.replaceChild(newCancelGoalBtn, cancelGoalBtn);
    
    // Add event listener
    newCancelGoalBtn.addEventListener('click', function() {
      const container = document.getElementById('goal-form-container');
      if (container) {
        container.classList.add('hidden');
        container.style.display = 'none';
      }
    });
  }
  
  // Ensure goal form close button works
  const closeGoalBtn = document.getElementById('goal-form-close');
  if (closeGoalBtn) {
    // Remove old event listeners by cloning and replacing
    const newCloseGoalBtn = closeGoalBtn.cloneNode(true);
    closeGoalBtn.parentNode.replaceChild(newCloseGoalBtn, closeGoalBtn);
    
    // Add event listener
    newCloseGoalBtn.addEventListener('click', function() {
      const container = document.getElementById('goal-form-container');
      if (container) {
        container.classList.add('hidden');
        container.style.display = 'none';
      }
    });
  }
  
  // Ensure goal form container click closes the form when clicking outside
  const goalFormContainer = document.getElementById('goal-form-container');
  if (goalFormContainer) {
    // Remove old event listeners by cloning and replacing
    const newGoalFormContainer = goalFormContainer.cloneNode(true);
    goalFormContainer.parentNode.replaceChild(newGoalFormContainer, goalFormContainer);
    
    // Add event listener
    newGoalFormContainer.addEventListener('click', function(event) {
      // Only close if clicking on the container itself, not its children
      if (event.target === newGoalFormContainer) {
        newGoalFormContainer.classList.add('hidden');
        newGoalFormContainer.style.display = 'none';
      }
    });
  }
  
  // When activity type changes, update the unit display and current activity
  const activityTypeSelect = document.getElementById('activity-type');
  if (activityTypeSelect) {
    activityTypeSelect.addEventListener('change', function() {
      // Get the current activity when selection changes
      const currentActivity = getCurrentActivityFromPage();
      
      // Update GoalsManager current activity
      if (window.goalsManager && currentActivity) {
        window.goalsManager.currentActivity = currentActivity;
      }
    });
  }
});
